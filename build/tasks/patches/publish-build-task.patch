--- publish-build-task.coffee.orig	2015-07-20 13:25:06.000000000 +0100
+++ publish-build-task.coffee	2015-07-20 15:31:03.000000000 +0100
@@ -62,13 +62,11 @@
   switch process.platform
     when 'darwin'
       [
-        {assetName: 'atom-mac.zip', sourcePath: 'Atom.app'}
-        {assetName: 'atom-mac-symbols.zip', sourcePath: 'Atom.breakpad.syms'}
-        {assetName: 'atom-api.json', sourcePath: 'atom-api.json'}
+        {assetName: "particle-dev-mac-#{version}.zip", sourcePath: '"Particle Dev.app"'}
       ]
     when 'win32'
-      assets = [{assetName: 'atom-windows.zip', sourcePath: 'Atom'}]
-      for squirrelAsset in ['AtomSetup.exe', 'RELEASES', "atom-#{version}-full.nupkg", "atom-#{version}-delta.nupkg"]
+      assets = [{assetName: "particle-dev-windows-#{version}.zip", sourcePath: '"Particle Dev"'}]
+      for squirrelAsset in ['ParticleDevSetup.exe', 'RELEASES', "particle-dev-#{version}-full.nupkg", "particle-dev-#{version}-delta.nupkg"]
         cp path.join(buildDir, 'installer', squirrelAsset), path.join(buildDir, squirrelAsset)
         assets.push({assetName: squirrelAsset, sourcePath: assetName})
       assets
@@ -79,8 +77,8 @@
         arch = 'amd64'

       # Check for a Debian build
-      sourcePath = "#{buildDir}/atom-#{version}-#{arch}.deb"
-      assetName = "atom-#{arch}.deb"
+      sourcePath = "#{buildDir}/particle-dev-#{version}-#{arch}.deb"
+      assetName = "particle-dev-#{arch}.deb"

       # Check for a Fedora build
       unless fs.isFileSync(sourcePath)
@@ -90,7 +88,7 @@
           arch = 'i386'
         else
           arch = 'x86_64'
-        assetName = "atom.#{arch}.rpm"
+        assetName = "particle-dev.#{arch}.rpm"

       cp sourcePath, path.join(buildDir, assetName)

@@ -121,10 +119,10 @@
   async.parallel(tasks, callback)

 getAtomDraftRelease = (callback) ->
-  atomRepo = new GitHub({repo: 'atom/atom', token})
+  atomRepo = new GitHub({repo: 'spark/spark-dev', token})
   atomRepo.getReleases (error, releases=[]) ->
     if error?
-      logError('Fetching atom/atom releases failed', error, releases)
+      logError('Fetching spark/spark-dev releases failed', error, releases)
       callback(error)
     else
       [firstDraft] = releases.filter ({draft}) -> draft
@@ -147,7 +145,7 @@
 createAtomDraftRelease = (callback) ->
   {version} = require('../../package.json')
   options =
-    uri: 'https://api.github.com/repos/atom/atom/releases'
+    uri: 'https://api.github.com/repos/spark/spark-dev/releases'
     method: 'POST'
     headers: defaultHeaders
     json:
@@ -162,7 +160,7 @@

   request options, (error, response, body='') ->
     if error? or response.statusCode isnt 201
-      logError("Creating atom/atom draft release failed", error, body)
+      logError("Creating spark/spark-dev draft release failed", error, body)
       callback(error ? new Error(response.statusCode))
     else
       callback(null, body)
